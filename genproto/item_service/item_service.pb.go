// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: item/item_service.proto

package item_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Items
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CategoryId     string   `protobuf:"bytes,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Condition      string   `protobuf:"bytes,5,opt,name=condition,proto3" json:"condition,omitempty"`
	SwapPreference []string `protobuf:"bytes,6,rep,name=swap_preference,json=swapPreference,proto3" json:"swap_preference,omitempty"`
	OwnerId        string   `protobuf:"bytes,7,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Status         string   `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt      string   `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      string   `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Item) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *Item) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *Item) GetSwapPreference() []string {
	if x != nil {
		return x.SwapPreference
	}
	return nil
}

func (x *Item) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Item) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Item) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Item) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type AddItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description    string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CategoryId     string   `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Condition      string   `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`
	SwapPreference []string `protobuf:"bytes,5,rep,name=swap_preference,json=swapPreference,proto3" json:"swap_preference,omitempty"`
	Images         []string `protobuf:"bytes,6,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *AddItemRequest) Reset() {
	*x = AddItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemRequest) ProtoMessage() {}

func (x *AddItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemRequest.ProtoReflect.Descriptor instead.
func (*AddItemRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddItemRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddItemRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddItemRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *AddItemRequest) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *AddItemRequest) GetSwapPreference() []string {
	if x != nil {
		return x.SwapPreference
	}
	return nil
}

func (x *AddItemRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

type AddItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *AddItemResponse) Reset() {
	*x = AddItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemResponse) ProtoMessage() {}

func (x *AddItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemResponse.ProtoReflect.Descriptor instead.
func (*AddItemResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{2}
}

func (x *AddItemResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Condition string `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *UpdateItemRequest) Reset() {
	*x = UpdateItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItemRequest) ProtoMessage() {}

func (x *UpdateItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateItemRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateItemRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateItemRequest) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type UpdateItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateItemResponse) Reset() {
	*x = UpdateItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItemResponse) ProtoMessage() {}

func (x *UpdateItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItemResponse.ProtoReflect.Descriptor instead.
func (*UpdateItemResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateItemResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type DeleteItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteItemRequest) Reset() {
	*x = DeleteItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemRequest) ProtoMessage() {}

func (x *DeleteItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteItemRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteItemResponse) Reset() {
	*x = DeleteItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemResponse) ProtoMessage() {}

func (x *DeleteItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemResponse.ProtoReflect.Descriptor instead.
func (*DeleteItemResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteItemResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetItemsRequest) Reset() {
	*x = GetItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsRequest) ProtoMessage() {}

func (x *GetItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsRequest.ProtoReflect.Descriptor instead.
func (*GetItemsRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetItemsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetItemsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total int32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page  int32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit int32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetItemsResponse) Reset() {
	*x = GetItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsResponse) ProtoMessage() {}

func (x *GetItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsResponse.ProtoReflect.Descriptor instead.
func (*GetItemsResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetItemsResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetItemsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetItemsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetItemsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetItemRequest) Reset() {
	*x = GetItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemRequest) ProtoMessage() {}

func (x *GetItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemRequest.ProtoReflect.Descriptor instead.
func (*GetItemRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetItemResponse) Reset() {
	*x = GetItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemResponse) ProtoMessage() {}

func (x *GetItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemResponse.ProtoReflect.Descriptor instead.
func (*GetItemResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetItemResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type SearchItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Category  string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Condition string `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	Page      int32  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Limit     int32  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SearchItemsRequest) Reset() {
	*x = SearchItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemsRequest) ProtoMessage() {}

func (x *SearchItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemsRequest.ProtoReflect.Descriptor instead.
func (*SearchItemsRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{11}
}

func (x *SearchItemsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchItemsRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SearchItemsRequest) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *SearchItemsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchItemsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SearchItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total int32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page  int32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit int32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SearchItemsResponse) Reset() {
	*x = SearchItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemsResponse) ProtoMessage() {}

func (x *SearchItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemsResponse.ProtoReflect.Descriptor instead.
func (*SearchItemsResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{12}
}

func (x *SearchItemsResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchItemsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchItemsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchItemsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Swaps
type Swap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OfferedItemId   string `protobuf:"bytes,2,opt,name=offered_item_id,json=offeredItemId,proto3" json:"offered_item_id,omitempty"`
	RequestedItemId string `protobuf:"bytes,3,opt,name=requested_item_id,json=requestedItemId,proto3" json:"requested_item_id,omitempty"`
	RequesterId     string `protobuf:"bytes,4,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	OwnerId         string `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Status          string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Message         string `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt       string `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Swap) Reset() {
	*x = Swap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Swap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Swap) ProtoMessage() {}

func (x *Swap) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Swap.ProtoReflect.Descriptor instead.
func (*Swap) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{13}
}

func (x *Swap) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Swap) GetOfferedItemId() string {
	if x != nil {
		return x.OfferedItemId
	}
	return ""
}

func (x *Swap) GetRequestedItemId() string {
	if x != nil {
		return x.RequestedItemId
	}
	return ""
}

func (x *Swap) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

func (x *Swap) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Swap) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Swap) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Swap) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Swap) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CreateSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OfferedItemId   string `protobuf:"bytes,2,opt,name=offered_item_id,json=offeredItemId,proto3" json:"offered_item_id,omitempty"`
	RequestedItemId string `protobuf:"bytes,3,opt,name=requested_item_id,json=requestedItemId,proto3" json:"requested_item_id,omitempty"`
	RequesterId     string `protobuf:"bytes,4,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	OwnerId         string `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Status          string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Message         string `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateSwapRequest) Reset() {
	*x = CreateSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSwapRequest) ProtoMessage() {}

func (x *CreateSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSwapRequest.ProtoReflect.Descriptor instead.
func (*CreateSwapRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateSwapRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateSwapRequest) GetOfferedItemId() string {
	if x != nil {
		return x.OfferedItemId
	}
	return ""
}

func (x *CreateSwapRequest) GetRequestedItemId() string {
	if x != nil {
		return x.RequestedItemId
	}
	return ""
}

func (x *CreateSwapRequest) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

func (x *CreateSwapRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateSwapRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateSwapRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateSwapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swap *Swap `protobuf:"bytes,1,opt,name=swap,proto3" json:"swap,omitempty"`
}

func (x *CreateSwapResponse) Reset() {
	*x = CreateSwapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSwapResponse) ProtoMessage() {}

func (x *CreateSwapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSwapResponse.ProtoReflect.Descriptor instead.
func (*CreateSwapResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{15}
}

func (x *CreateSwapResponse) GetSwap() *Swap {
	if x != nil {
		return x.Swap
	}
	return nil
}

type UpdateSwapStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *UpdateSwapStatusRequest) Reset() {
	*x = UpdateSwapStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSwapStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSwapStatusRequest) ProtoMessage() {}

func (x *UpdateSwapStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSwapStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateSwapStatusRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateSwapStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSwapStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateSwapStatusRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type UpdateSwapStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swap *Swap `protobuf:"bytes,1,opt,name=swap,proto3" json:"swap,omitempty"`
}

func (x *UpdateSwapStatusResponse) Reset() {
	*x = UpdateSwapStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSwapStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSwapStatusResponse) ProtoMessage() {}

func (x *UpdateSwapStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSwapStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateSwapStatusResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateSwapStatusResponse) GetSwap() *Swap {
	if x != nil {
		return x.Swap
	}
	return nil
}

type GetSwapsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Page   int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetSwapsRequest) Reset() {
	*x = GetSwapsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSwapsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwapsRequest) ProtoMessage() {}

func (x *GetSwapsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwapsRequest.ProtoReflect.Descriptor instead.
func (*GetSwapsRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetSwapsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetSwapsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSwapsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSwapsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swaps []*Swap `protobuf:"bytes,1,rep,name=swaps,proto3" json:"swaps,omitempty"`
	Total int32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page  int32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit int32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetSwapsResponse) Reset() {
	*x = GetSwapsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSwapsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwapsResponse) ProtoMessage() {}

func (x *GetSwapsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwapsResponse.ProtoReflect.Descriptor instead.
func (*GetSwapsResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetSwapsResponse) GetSwaps() []*Swap {
	if x != nil {
		return x.Swaps
	}
	return nil
}

func (x *GetSwapsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetSwapsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSwapsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Recycling Centers
type RecyclingCenter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address           string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	AcceptedMaterials []string `protobuf:"bytes,4,rep,name=accepted_materials,json=acceptedMaterials,proto3" json:"accepted_materials,omitempty"`
	WorkingHours      string   `protobuf:"bytes,5,opt,name=working_hours,json=workingHours,proto3" json:"working_hours,omitempty"`
	ContactNumber     string   `protobuf:"bytes,6,opt,name=contact_number,json=contactNumber,proto3" json:"contact_number,omitempty"`
	CreatedAt         string   `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string   `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *RecyclingCenter) Reset() {
	*x = RecyclingCenter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecyclingCenter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecyclingCenter) ProtoMessage() {}

func (x *RecyclingCenter) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecyclingCenter.ProtoReflect.Descriptor instead.
func (*RecyclingCenter) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{20}
}

func (x *RecyclingCenter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RecyclingCenter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecyclingCenter) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RecyclingCenter) GetAcceptedMaterials() []string {
	if x != nil {
		return x.AcceptedMaterials
	}
	return nil
}

func (x *RecyclingCenter) GetWorkingHours() string {
	if x != nil {
		return x.WorkingHours
	}
	return ""
}

func (x *RecyclingCenter) GetContactNumber() string {
	if x != nil {
		return x.ContactNumber
	}
	return ""
}

func (x *RecyclingCenter) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RecyclingCenter) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type AddRecyclingCenterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address           string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	AcceptedMaterials []string `protobuf:"bytes,3,rep,name=accepted_materials,json=acceptedMaterials,proto3" json:"accepted_materials,omitempty"`
	WorkingHours      string   `protobuf:"bytes,4,opt,name=working_hours,json=workingHours,proto3" json:"working_hours,omitempty"`
	ContactNumber     string   `protobuf:"bytes,5,opt,name=contact_number,json=contactNumber,proto3" json:"contact_number,omitempty"`
}

func (x *AddRecyclingCenterRequest) Reset() {
	*x = AddRecyclingCenterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecyclingCenterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecyclingCenterRequest) ProtoMessage() {}

func (x *AddRecyclingCenterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecyclingCenterRequest.ProtoReflect.Descriptor instead.
func (*AddRecyclingCenterRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{21}
}

func (x *AddRecyclingCenterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddRecyclingCenterRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddRecyclingCenterRequest) GetAcceptedMaterials() []string {
	if x != nil {
		return x.AcceptedMaterials
	}
	return nil
}

func (x *AddRecyclingCenterRequest) GetWorkingHours() string {
	if x != nil {
		return x.WorkingHours
	}
	return ""
}

func (x *AddRecyclingCenterRequest) GetContactNumber() string {
	if x != nil {
		return x.ContactNumber
	}
	return ""
}

type AddRecyclingCenterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Center *RecyclingCenter `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty"`
}

func (x *AddRecyclingCenterResponse) Reset() {
	*x = AddRecyclingCenterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecyclingCenterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecyclingCenterResponse) ProtoMessage() {}

func (x *AddRecyclingCenterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecyclingCenterResponse.ProtoReflect.Descriptor instead.
func (*AddRecyclingCenterResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{22}
}

func (x *AddRecyclingCenterResponse) GetCenter() *RecyclingCenter {
	if x != nil {
		return x.Center
	}
	return nil
}

type GetRecyclingCentersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Material string `protobuf:"bytes,1,opt,name=material,proto3" json:"material,omitempty"`
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit    int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetRecyclingCentersRequest) Reset() {
	*x = GetRecyclingCentersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecyclingCentersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecyclingCentersRequest) ProtoMessage() {}

func (x *GetRecyclingCentersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecyclingCentersRequest.ProtoReflect.Descriptor instead.
func (*GetRecyclingCentersRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetRecyclingCentersRequest) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

func (x *GetRecyclingCentersRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRecyclingCentersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetRecyclingCentersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Centers []*RecyclingCenter `protobuf:"bytes,1,rep,name=centers,proto3" json:"centers,omitempty"`
	Total   int32              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page    int32              `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit   int32              `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetRecyclingCentersResponse) Reset() {
	*x = GetRecyclingCentersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecyclingCentersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecyclingCentersResponse) ProtoMessage() {}

func (x *GetRecyclingCentersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecyclingCentersResponse.ProtoReflect.Descriptor instead.
func (*GetRecyclingCentersResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetRecyclingCentersResponse) GetCenters() []*RecyclingCenter {
	if x != nil {
		return x.Centers
	}
	return nil
}

func (x *GetRecyclingCentersResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetRecyclingCentersResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRecyclingCentersResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type RecyclingSubmission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CenterId        string            `protobuf:"bytes,2,opt,name=center_id,json=centerId,proto3" json:"center_id,omitempty"`
	UserId          string            `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Items           []*SubmissionItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	EcoPointsEarned int32             `protobuf:"varint,5,opt,name=eco_points_earned,json=ecoPointsEarned,proto3" json:"eco_points_earned,omitempty"`
	CreatedAt       string            `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *RecyclingSubmission) Reset() {
	*x = RecyclingSubmission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecyclingSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecyclingSubmission) ProtoMessage() {}

func (x *RecyclingSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecyclingSubmission.ProtoReflect.Descriptor instead.
func (*RecyclingSubmission) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{25}
}

func (x *RecyclingSubmission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RecyclingSubmission) GetCenterId() string {
	if x != nil {
		return x.CenterId
	}
	return ""
}

func (x *RecyclingSubmission) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RecyclingSubmission) GetItems() []*SubmissionItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *RecyclingSubmission) GetEcoPointsEarned() int32 {
	if x != nil {
		return x.EcoPointsEarned
	}
	return 0
}

func (x *RecyclingSubmission) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type SubmissionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   string  `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Weight   float32 `protobuf:"fixed32,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Material string  `protobuf:"bytes,3,opt,name=material,proto3" json:"material,omitempty"`
}

func (x *SubmissionItem) Reset() {
	*x = SubmissionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionItem) ProtoMessage() {}

func (x *SubmissionItem) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionItem.ProtoReflect.Descriptor instead.
func (*SubmissionItem) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{26}
}

func (x *SubmissionItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *SubmissionItem) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *SubmissionItem) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

type AddRecyclingSubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CenterId string            `protobuf:"bytes,1,opt,name=center_id,json=centerId,proto3" json:"center_id,omitempty"`
	UserId   string            `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Items    []*SubmissionItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AddRecyclingSubmissionRequest) Reset() {
	*x = AddRecyclingSubmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecyclingSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecyclingSubmissionRequest) ProtoMessage() {}

func (x *AddRecyclingSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecyclingSubmissionRequest.ProtoReflect.Descriptor instead.
func (*AddRecyclingSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{27}
}

func (x *AddRecyclingSubmissionRequest) GetCenterId() string {
	if x != nil {
		return x.CenterId
	}
	return ""
}

func (x *AddRecyclingSubmissionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddRecyclingSubmissionRequest) GetItems() []*SubmissionItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type AddRecyclingSubmissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submission *RecyclingSubmission `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
}

func (x *AddRecyclingSubmissionResponse) Reset() {
	*x = AddRecyclingSubmissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecyclingSubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecyclingSubmissionResponse) ProtoMessage() {}

func (x *AddRecyclingSubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecyclingSubmissionResponse.ProtoReflect.Descriptor instead.
func (*AddRecyclingSubmissionResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{28}
}

func (x *AddRecyclingSubmissionResponse) GetSubmission() *RecyclingSubmission {
	if x != nil {
		return x.Submission
	}
	return nil
}

// User Ratings
type Rating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RaterId   string  `protobuf:"bytes,3,opt,name=rater_id,json=raterId,proto3" json:"rater_id,omitempty"`
	Rating    float32 `protobuf:"fixed32,4,opt,name=rating,proto3" json:"rating,omitempty"`
	Comment   string  `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	SwapId    string  `protobuf:"bytes,6,opt,name=swap_id,json=swapId,proto3" json:"swap_id,omitempty"`
	CreatedAt string  `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Rating) Reset() {
	*x = Rating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rating) ProtoMessage() {}

func (x *Rating) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rating.ProtoReflect.Descriptor instead.
func (*Rating) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{29}
}

func (x *Rating) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rating) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Rating) GetRaterId() string {
	if x != nil {
		return x.RaterId
	}
	return ""
}

func (x *Rating) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Rating) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Rating) GetSwapId() string {
	if x != nil {
		return x.SwapId
	}
	return ""
}

func (x *Rating) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type AddUserRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId  string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RaterId string  `protobuf:"bytes,3,opt,name=rater_id,json=raterId,proto3" json:"rater_id,omitempty"`
	Rating  float32 `protobuf:"fixed32,4,opt,name=rating,proto3" json:"rating,omitempty"`
	Comment string  `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	SwapId  string  `protobuf:"bytes,6,opt,name=swap_id,json=swapId,proto3" json:"swap_id,omitempty"`
}

func (x *AddUserRatingRequest) Reset() {
	*x = AddUserRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRatingRequest) ProtoMessage() {}

func (x *AddUserRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRatingRequest.ProtoReflect.Descriptor instead.
func (*AddUserRatingRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{30}
}

func (x *AddUserRatingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddUserRatingRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddUserRatingRequest) GetRaterId() string {
	if x != nil {
		return x.RaterId
	}
	return ""
}

func (x *AddUserRatingRequest) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *AddUserRatingRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *AddUserRatingRequest) GetSwapId() string {
	if x != nil {
		return x.SwapId
	}
	return ""
}

type AddUserRatingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating *Rating `protobuf:"bytes,1,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *AddUserRatingResponse) Reset() {
	*x = AddUserRatingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRatingResponse) ProtoMessage() {}

func (x *AddUserRatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRatingResponse.ProtoReflect.Descriptor instead.
func (*AddUserRatingResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{31}
}

func (x *AddUserRatingResponse) GetRating() *Rating {
	if x != nil {
		return x.Rating
	}
	return nil
}

type GetUserRatingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page   int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetUserRatingsRequest) Reset() {
	*x = GetUserRatingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRatingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRatingsRequest) ProtoMessage() {}

func (x *GetUserRatingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRatingsRequest.ProtoReflect.Descriptor instead.
func (*GetUserRatingsRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{32}
}

func (x *GetUserRatingsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserRatingsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserRatingsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetUserRatingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ratings       []*Rating `protobuf:"bytes,1,rep,name=ratings,proto3" json:"ratings,omitempty"`
	AverageRating float32   `protobuf:"fixed32,2,opt,name=average_rating,json=averageRating,proto3" json:"average_rating,omitempty"`
	TotalRatings  int32     `protobuf:"varint,3,opt,name=total_ratings,json=totalRatings,proto3" json:"total_ratings,omitempty"`
	Page          int32     `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32     `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetUserRatingsResponse) Reset() {
	*x = GetUserRatingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRatingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRatingsResponse) ProtoMessage() {}

func (x *GetUserRatingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRatingsResponse.ProtoReflect.Descriptor instead.
func (*GetUserRatingsResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetUserRatingsResponse) GetRatings() []*Rating {
	if x != nil {
		return x.Ratings
	}
	return nil
}

func (x *GetUserRatingsResponse) GetAverageRating() float32 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *GetUserRatingsResponse) GetTotalRatings() int32 {
	if x != nil {
		return x.TotalRatings
	}
	return 0
}

func (x *GetUserRatingsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserRatingsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Item Categories
type ItemCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ItemCategory) Reset() {
	*x = ItemCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemCategory) ProtoMessage() {}

func (x *ItemCategory) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemCategory.ProtoReflect.Descriptor instead.
func (*ItemCategory) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{34}
}

func (x *ItemCategory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ItemCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemCategory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ItemCategory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type AddItemCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AddItemCategoryRequest) Reset() {
	*x = AddItemCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemCategoryRequest) ProtoMessage() {}

func (x *AddItemCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemCategoryRequest.ProtoReflect.Descriptor instead.
func (*AddItemCategoryRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{35}
}

func (x *AddItemCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddItemCategoryRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddItemCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category *ItemCategory `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *AddItemCategoryResponse) Reset() {
	*x = AddItemCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemCategoryResponse) ProtoMessage() {}

func (x *AddItemCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemCategoryResponse.ProtoReflect.Descriptor instead.
func (*AddItemCategoryResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{36}
}

func (x *AddItemCategoryResponse) GetCategory() *ItemCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

// Statistics
type GetStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate string `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *GetStatisticsRequest) Reset() {
	*x = GetStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticsRequest) ProtoMessage() {}

func (x *GetStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticsRequest.ProtoReflect.Descriptor instead.
func (*GetStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetStatisticsRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetStatisticsRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type GetStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSwaps           int32                 `protobuf:"varint,1,opt,name=total_swaps,json=totalSwaps,proto3" json:"total_swaps,omitempty"`
	TotalRecycledItems   int32                 `protobuf:"varint,2,opt,name=total_recycled_items,json=totalRecycledItems,proto3" json:"total_recycled_items,omitempty"`
	TotalEcoPointsEarned int32                 `protobuf:"varint,3,opt,name=total_eco_points_earned,json=totalEcoPointsEarned,proto3" json:"total_eco_points_earned,omitempty"`
	TopCategories        []*TopCategory        `protobuf:"bytes,4,rep,name=top_categories,json=topCategories,proto3" json:"top_categories,omitempty"`
	TopRecyclingCenters  []*TopRecyclingCenter `protobuf:"bytes,5,rep,name=top_recycling_centers,json=topRecyclingCenters,proto3" json:"top_recycling_centers,omitempty"`
}

func (x *GetStatisticsResponse) Reset() {
	*x = GetStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticsResponse) ProtoMessage() {}

func (x *GetStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticsResponse.ProtoReflect.Descriptor instead.
func (*GetStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetStatisticsResponse) GetTotalSwaps() int32 {
	if x != nil {
		return x.TotalSwaps
	}
	return 0
}

func (x *GetStatisticsResponse) GetTotalRecycledItems() int32 {
	if x != nil {
		return x.TotalRecycledItems
	}
	return 0
}

func (x *GetStatisticsResponse) GetTotalEcoPointsEarned() int32 {
	if x != nil {
		return x.TotalEcoPointsEarned
	}
	return 0
}

func (x *GetStatisticsResponse) GetTopCategories() []*TopCategory {
	if x != nil {
		return x.TopCategories
	}
	return nil
}

func (x *GetStatisticsResponse) GetTopRecyclingCenters() []*TopRecyclingCenter {
	if x != nil {
		return x.TopRecyclingCenters
	}
	return nil
}

type TopCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SwapCount int32  `protobuf:"varint,3,opt,name=swap_count,json=swapCount,proto3" json:"swap_count,omitempty"`
}

func (x *TopCategory) Reset() {
	*x = TopCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopCategory) ProtoMessage() {}

func (x *TopCategory) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopCategory.ProtoReflect.Descriptor instead.
func (*TopCategory) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{39}
}

func (x *TopCategory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TopCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TopCategory) GetSwapCount() int32 {
	if x != nil {
		return x.SwapCount
	}
	return 0
}

type TopRecyclingCenter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SubmissionsCount int32  `protobuf:"varint,3,opt,name=submissions_count,json=submissionsCount,proto3" json:"submissions_count,omitempty"`
}

func (x *TopRecyclingCenter) Reset() {
	*x = TopRecyclingCenter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopRecyclingCenter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopRecyclingCenter) ProtoMessage() {}

func (x *TopRecyclingCenter) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopRecyclingCenter.ProtoReflect.Descriptor instead.
func (*TopRecyclingCenter) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{40}
}

func (x *TopRecyclingCenter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TopRecyclingCenter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TopRecyclingCenter) GetSubmissionsCount() int32 {
	if x != nil {
		return x.SubmissionsCount
	}
	return 0
}

// User Activity
type GetUserActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *GetUserActivityRequest) Reset() {
	*x = GetUserActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserActivityRequest) ProtoMessage() {}

func (x *GetUserActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserActivityRequest.ProtoReflect.Descriptor instead.
func (*GetUserActivityRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{41}
}

func (x *GetUserActivityRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserActivityRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetUserActivityRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type GetUserActivityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SwapsInitiated       int32  `protobuf:"varint,2,opt,name=swaps_initiated,json=swapsInitiated,proto3" json:"swaps_initiated,omitempty"`
	SwapsCompleted       int32  `protobuf:"varint,3,opt,name=swaps_completed,json=swapsCompleted,proto3" json:"swaps_completed,omitempty"`
	ItemsListed          int32  `protobuf:"varint,4,opt,name=items_listed,json=itemsListed,proto3" json:"items_listed,omitempty"`
	RecyclingSubmissions int32  `protobuf:"varint,5,opt,name=recycling_submissions,json=recyclingSubmissions,proto3" json:"recycling_submissions,omitempty"`
	EcoPointsEarned      int32  `protobuf:"varint,6,opt,name=eco_points_earned,json=ecoPointsEarned,proto3" json:"eco_points_earned,omitempty"`
}

func (x *GetUserActivityResponse) Reset() {
	*x = GetUserActivityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserActivityResponse) ProtoMessage() {}

func (x *GetUserActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserActivityResponse.ProtoReflect.Descriptor instead.
func (*GetUserActivityResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{42}
}

func (x *GetUserActivityResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserActivityResponse) GetSwapsInitiated() int32 {
	if x != nil {
		return x.SwapsInitiated
	}
	return 0
}

func (x *GetUserActivityResponse) GetSwapsCompleted() int32 {
	if x != nil {
		return x.SwapsCompleted
	}
	return 0
}

func (x *GetUserActivityResponse) GetItemsListed() int32 {
	if x != nil {
		return x.ItemsListed
	}
	return 0
}

func (x *GetUserActivityResponse) GetRecyclingSubmissions() int32 {
	if x != nil {
		return x.RecyclingSubmissions
	}
	return 0
}

func (x *GetUserActivityResponse) GetEcoPointsEarned() int32 {
	if x != nil {
		return x.EcoPointsEarned
	}
	return 0
}

// Eco Challenges
type EcoChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StartDate    string `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate      string `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	RewardPoints int32  `protobuf:"varint,6,opt,name=reward_points,json=rewardPoints,proto3" json:"reward_points,omitempty"`
	CreatedAt    string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *EcoChallenge) Reset() {
	*x = EcoChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcoChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcoChallenge) ProtoMessage() {}

func (x *EcoChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcoChallenge.ProtoReflect.Descriptor instead.
func (*EcoChallenge) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{43}
}

func (x *EcoChallenge) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EcoChallenge) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EcoChallenge) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EcoChallenge) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *EcoChallenge) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *EcoChallenge) GetRewardPoints() int32 {
	if x != nil {
		return x.RewardPoints
	}
	return 0
}

func (x *EcoChallenge) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type AddEcoChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description  string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	StartDate    string `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate      string `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	RewardPoints int32  `protobuf:"varint,5,opt,name=reward_points,json=rewardPoints,proto3" json:"reward_points,omitempty"`
}

func (x *AddEcoChallengeRequest) Reset() {
	*x = AddEcoChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEcoChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEcoChallengeRequest) ProtoMessage() {}

func (x *AddEcoChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEcoChallengeRequest.ProtoReflect.Descriptor instead.
func (*AddEcoChallengeRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{44}
}

func (x *AddEcoChallengeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddEcoChallengeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddEcoChallengeRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *AddEcoChallengeRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *AddEcoChallengeRequest) GetRewardPoints() int32 {
	if x != nil {
		return x.RewardPoints
	}
	return 0
}

type AddEcoChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenge *EcoChallenge `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *AddEcoChallengeResponse) Reset() {
	*x = AddEcoChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEcoChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEcoChallengeResponse) ProtoMessage() {}

func (x *AddEcoChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEcoChallengeResponse.ProtoReflect.Descriptor instead.
func (*AddEcoChallengeResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{45}
}

func (x *AddEcoChallengeResponse) GetChallenge() *EcoChallenge {
	if x != nil {
		return x.Challenge
	}
	return nil
}

type ParticipateEcoChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChallengeId string `protobuf:"bytes,1,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status      string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ParticipateEcoChallengeRequest) Reset() {
	*x = ParticipateEcoChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipateEcoChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipateEcoChallengeRequest) ProtoMessage() {}

func (x *ParticipateEcoChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipateEcoChallengeRequest.ProtoReflect.Descriptor instead.
func (*ParticipateEcoChallengeRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{46}
}

func (x *ParticipateEcoChallengeRequest) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *ParticipateEcoChallengeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ParticipateEcoChallengeRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ParticipateEcoChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChallengeId string `protobuf:"bytes,1,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status      string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	JoinedAt    string `protobuf:"bytes,4,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
}

func (x *ParticipateEcoChallengeResponse) Reset() {
	*x = ParticipateEcoChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipateEcoChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipateEcoChallengeResponse) ProtoMessage() {}

func (x *ParticipateEcoChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipateEcoChallengeResponse.ProtoReflect.Descriptor instead.
func (*ParticipateEcoChallengeResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{47}
}

func (x *ParticipateEcoChallengeResponse) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *ParticipateEcoChallengeResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ParticipateEcoChallengeResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ParticipateEcoChallengeResponse) GetJoinedAt() string {
	if x != nil {
		return x.JoinedAt
	}
	return ""
}

type UpdateEcoChallengeProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChallengeId        string `protobuf:"bytes,1,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	RecycledItemsCount int32  `protobuf:"varint,2,opt,name=recycled_items_count,json=recycledItemsCount,proto3" json:"recycled_items_count,omitempty"`
}

func (x *UpdateEcoChallengeProgressRequest) Reset() {
	*x = UpdateEcoChallengeProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEcoChallengeProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEcoChallengeProgressRequest) ProtoMessage() {}

func (x *UpdateEcoChallengeProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEcoChallengeProgressRequest.ProtoReflect.Descriptor instead.
func (*UpdateEcoChallengeProgressRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateEcoChallengeProgressRequest) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *UpdateEcoChallengeProgressRequest) GetRecycledItemsCount() int32 {
	if x != nil {
		return x.RecycledItemsCount
	}
	return 0
}

type UpdateEcoChallengeProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChallengeId        string `protobuf:"bytes,1,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	UserId             string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status             string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	RecycledItemsCount int32  `protobuf:"varint,4,opt,name=recycled_items_count,json=recycledItemsCount,proto3" json:"recycled_items_count,omitempty"`
	UpdatedAt          string `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *UpdateEcoChallengeProgressResponse) Reset() {
	*x = UpdateEcoChallengeProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEcoChallengeProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEcoChallengeProgressResponse) ProtoMessage() {}

func (x *UpdateEcoChallengeProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEcoChallengeProgressResponse.ProtoReflect.Descriptor instead.
func (*UpdateEcoChallengeProgressResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateEcoChallengeProgressResponse) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *UpdateEcoChallengeProgressResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateEcoChallengeProgressResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateEcoChallengeProgressResponse) GetRecycledItemsCount() int32 {
	if x != nil {
		return x.RecycledItemsCount
	}
	return 0
}

func (x *UpdateEcoChallengeProgressResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// Eco Tips
type EcoTip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *EcoTip) Reset() {
	*x = EcoTip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcoTip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcoTip) ProtoMessage() {}

func (x *EcoTip) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcoTip.ProtoReflect.Descriptor instead.
func (*EcoTip) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{50}
}

func (x *EcoTip) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EcoTip) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EcoTip) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EcoTip) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type AddEcoTipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AddEcoTipRequest) Reset() {
	*x = AddEcoTipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEcoTipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEcoTipRequest) ProtoMessage() {}

func (x *AddEcoTipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEcoTipRequest.ProtoReflect.Descriptor instead.
func (*AddEcoTipRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{51}
}

func (x *AddEcoTipRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddEcoTipRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddEcoTipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tip *EcoTip `protobuf:"bytes,1,opt,name=tip,proto3" json:"tip,omitempty"`
}

func (x *AddEcoTipResponse) Reset() {
	*x = AddEcoTipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEcoTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEcoTipResponse) ProtoMessage() {}

func (x *AddEcoTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEcoTipResponse.ProtoReflect.Descriptor instead.
func (*AddEcoTipResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{52}
}

func (x *AddEcoTipResponse) GetTip() *EcoTip {
	if x != nil {
		return x.Tip
	}
	return nil
}

type GetEcoTipsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetEcoTipsRequest) Reset() {
	*x = GetEcoTipsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEcoTipsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEcoTipsRequest) ProtoMessage() {}

func (x *GetEcoTipsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEcoTipsRequest.ProtoReflect.Descriptor instead.
func (*GetEcoTipsRequest) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{53}
}

func (x *GetEcoTipsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetEcoTipsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetEcoTipsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tips  []*EcoTip `protobuf:"bytes,1,rep,name=tips,proto3" json:"tips,omitempty"`
	Total int32     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page  int32     `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit int32     `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetEcoTipsResponse) Reset() {
	*x = GetEcoTipsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_item_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEcoTipsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEcoTipsResponse) ProtoMessage() {}

func (x *GetEcoTipsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEcoTipsResponse.ProtoReflect.Descriptor instead.
func (*GetEcoTipsResponse) Descriptor() ([]byte, []int) {
	return file_item_item_service_proto_rawDescGZIP(), []int{54}
}

func (x *GetEcoTipsResponse) GetTips() []*EcoTip {
	if x != nil {
		return x.Tips
	}
	return nil
}

func (x *GetEcoTipsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetEcoTipsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetEcoTipsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

var File_item_item_service_proto protoreflect.FileDescriptor

var file_item_item_service_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x63, 0x6f, 0x5f, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x70, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x77, 0x61, 0x70, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xc6, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x77, 0x61, 0x70, 0x5f,
	0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x77, 0x61, 0x70, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x63, 0x6f, 0x5f,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x22, 0x55, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3b, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x7c, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x63,
	0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x8e, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x7f, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65,
	0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x98, 0x02, 0x0a, 0x04, 0x53, 0x77, 0x61, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xe7, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x77, 0x61,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x77, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x53, 0x77, 0x61, 0x70, 0x52, 0x04, 0x73, 0x77, 0x61, 0x70, 0x22, 0x59, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x77, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53,
	0x77, 0x61, 0x70, 0x52, 0x04, 0x73, 0x77, 0x61, 0x70, 0x22, 0x53, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x7c,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x77, 0x61, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x53, 0x77, 0x61, 0x70, 0x52, 0x05, 0x73, 0x77, 0x61, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x88, 0x02, 0x0a,
	0x0f, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2d,
	0x0a, 0x12, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x11, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f,
	0x75, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x53,
	0x0a, 0x1a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x06, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x69, 0x6e, 0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e,
	0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0xda, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x63, 0x6f, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65,
	0x63, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5d, 0x0a,
	0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x89, 0x01, 0x0a,
	0x1d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x63, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x01,
	0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x77, 0x61, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x77, 0x61, 0x70, 0x49, 0x64, 0x22, 0x45,
	0x0a, 0x15, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x5a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0xbe, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x73, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4e, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x50, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xb9, 0x02, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x77, 0x61, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x77, 0x61, 0x70, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x65, 0x63, 0x6f, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x61,
	0x72, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x45, 0x63, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64,
	0x12, 0x40, 0x0a, 0x0e, 0x74, 0x6f, 0x70, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x0d, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x54, 0x0a, 0x15, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x13, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e,
	0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x22, 0x50, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x77, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x77, 0x61, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x12, 0x54, 0x6f,
	0x70, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x6b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x88,
	0x02, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x77, 0x61, 0x70, 0x73, 0x5f, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x77,
	0x61, 0x70, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x77, 0x61, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x77, 0x61, 0x70, 0x73, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69,
	0x6e, 0x67, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x65, 0x63, 0x6f, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x63, 0x6f, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x0c, 0x45, 0x63,
	0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xaf, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x45, 0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x22, 0x53, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x45, 0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x45, 0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x22, 0x74, 0x0a, 0x1e, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x92, 0x01,
	0x0a, 0x1f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x78, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc9, 0x01, 0x0a,
	0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x67, 0x0a, 0x06, 0x45, 0x63, 0x6f, 0x54,
	0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x42, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x45, 0x63, 0x6f, 0x54, 0x69, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x45, 0x63, 0x6f, 0x54,
	0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x74, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x63, 0x6f, 0x54, 0x69, 0x70, 0x52, 0x03, 0x74,
	0x69, 0x70, 0x22, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x63, 0x6f, 0x54, 0x69, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x7e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x63, 0x6f, 0x54, 0x69, 0x70, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x63, 0x6f, 0x54, 0x69, 0x70, 0x52, 0x04, 0x74, 0x69, 0x70,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x32, 0xf7, 0x0f, 0x0a, 0x12, 0x45, 0x63, 0x6f, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f,
	0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1f, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d,
	0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x77, 0x61, 0x70, 0x12, 0x1f, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x77, 0x61,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x77,
	0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25,
	0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x77, 0x61, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x73, 0x12, 0x1d, 0x2e, 0x65, 0x63, 0x6f, 0x5f,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x27,
	0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x69, 0x6e, 0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e,
	0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x28, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a,
	0x16, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x69, 0x6e, 0x67, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x22, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x23,
	0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x65,
	0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x22, 0x2e, 0x65, 0x63, 0x6f,
	0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65,
	0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x45, 0x63, 0x6f, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65,
	0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x45,
	0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x17, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x74, 0x65, 0x45, 0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x2c,
	0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65,
	0x63, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x2e, 0x65, 0x63, 0x6f, 0x5f,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x63, 0x6f,
	0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x63, 0x6f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x45, 0x63, 0x6f, 0x54, 0x69, 0x70, 0x12, 0x1e, 0x2e, 0x65, 0x63, 0x6f, 0x5f,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x63, 0x6f, 0x54,
	0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x63, 0x6f, 0x5f,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x63, 0x6f, 0x54,
	0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x45, 0x63, 0x6f, 0x54, 0x69, 0x70, 0x73, 0x12, 0x1f, 0x2e, 0x65, 0x63, 0x6f, 0x5f, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x63, 0x6f, 0x54, 0x69,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x63, 0x6f, 0x5f,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x63, 0x6f, 0x54,
	0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x17, 0x5a, 0x15, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_item_item_service_proto_rawDescOnce sync.Once
	file_item_item_service_proto_rawDescData = file_item_item_service_proto_rawDesc
)

func file_item_item_service_proto_rawDescGZIP() []byte {
	file_item_item_service_proto_rawDescOnce.Do(func() {
		file_item_item_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_item_item_service_proto_rawDescData)
	})
	return file_item_item_service_proto_rawDescData
}

var file_item_item_service_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_item_item_service_proto_goTypes = []any{
	(*Item)(nil),                               // 0: eco_exchange.Item
	(*AddItemRequest)(nil),                     // 1: eco_exchange.AddItemRequest
	(*AddItemResponse)(nil),                    // 2: eco_exchange.AddItemResponse
	(*UpdateItemRequest)(nil),                  // 3: eco_exchange.UpdateItemRequest
	(*UpdateItemResponse)(nil),                 // 4: eco_exchange.UpdateItemResponse
	(*DeleteItemRequest)(nil),                  // 5: eco_exchange.DeleteItemRequest
	(*DeleteItemResponse)(nil),                 // 6: eco_exchange.DeleteItemResponse
	(*GetItemsRequest)(nil),                    // 7: eco_exchange.GetItemsRequest
	(*GetItemsResponse)(nil),                   // 8: eco_exchange.GetItemsResponse
	(*GetItemRequest)(nil),                     // 9: eco_exchange.GetItemRequest
	(*GetItemResponse)(nil),                    // 10: eco_exchange.GetItemResponse
	(*SearchItemsRequest)(nil),                 // 11: eco_exchange.SearchItemsRequest
	(*SearchItemsResponse)(nil),                // 12: eco_exchange.SearchItemsResponse
	(*Swap)(nil),                               // 13: eco_exchange.Swap
	(*CreateSwapRequest)(nil),                  // 14: eco_exchange.CreateSwapRequest
	(*CreateSwapResponse)(nil),                 // 15: eco_exchange.CreateSwapResponse
	(*UpdateSwapStatusRequest)(nil),            // 16: eco_exchange.UpdateSwapStatusRequest
	(*UpdateSwapStatusResponse)(nil),           // 17: eco_exchange.UpdateSwapStatusResponse
	(*GetSwapsRequest)(nil),                    // 18: eco_exchange.GetSwapsRequest
	(*GetSwapsResponse)(nil),                   // 19: eco_exchange.GetSwapsResponse
	(*RecyclingCenter)(nil),                    // 20: eco_exchange.RecyclingCenter
	(*AddRecyclingCenterRequest)(nil),          // 21: eco_exchange.AddRecyclingCenterRequest
	(*AddRecyclingCenterResponse)(nil),         // 22: eco_exchange.AddRecyclingCenterResponse
	(*GetRecyclingCentersRequest)(nil),         // 23: eco_exchange.GetRecyclingCentersRequest
	(*GetRecyclingCentersResponse)(nil),        // 24: eco_exchange.GetRecyclingCentersResponse
	(*RecyclingSubmission)(nil),                // 25: eco_exchange.RecyclingSubmission
	(*SubmissionItem)(nil),                     // 26: eco_exchange.SubmissionItem
	(*AddRecyclingSubmissionRequest)(nil),      // 27: eco_exchange.AddRecyclingSubmissionRequest
	(*AddRecyclingSubmissionResponse)(nil),     // 28: eco_exchange.AddRecyclingSubmissionResponse
	(*Rating)(nil),                             // 29: eco_exchange.Rating
	(*AddUserRatingRequest)(nil),               // 30: eco_exchange.AddUserRatingRequest
	(*AddUserRatingResponse)(nil),              // 31: eco_exchange.AddUserRatingResponse
	(*GetUserRatingsRequest)(nil),              // 32: eco_exchange.GetUserRatingsRequest
	(*GetUserRatingsResponse)(nil),             // 33: eco_exchange.GetUserRatingsResponse
	(*ItemCategory)(nil),                       // 34: eco_exchange.ItemCategory
	(*AddItemCategoryRequest)(nil),             // 35: eco_exchange.AddItemCategoryRequest
	(*AddItemCategoryResponse)(nil),            // 36: eco_exchange.AddItemCategoryResponse
	(*GetStatisticsRequest)(nil),               // 37: eco_exchange.GetStatisticsRequest
	(*GetStatisticsResponse)(nil),              // 38: eco_exchange.GetStatisticsResponse
	(*TopCategory)(nil),                        // 39: eco_exchange.TopCategory
	(*TopRecyclingCenter)(nil),                 // 40: eco_exchange.TopRecyclingCenter
	(*GetUserActivityRequest)(nil),             // 41: eco_exchange.GetUserActivityRequest
	(*GetUserActivityResponse)(nil),            // 42: eco_exchange.GetUserActivityResponse
	(*EcoChallenge)(nil),                       // 43: eco_exchange.EcoChallenge
	(*AddEcoChallengeRequest)(nil),             // 44: eco_exchange.AddEcoChallengeRequest
	(*AddEcoChallengeResponse)(nil),            // 45: eco_exchange.AddEcoChallengeResponse
	(*ParticipateEcoChallengeRequest)(nil),     // 46: eco_exchange.ParticipateEcoChallengeRequest
	(*ParticipateEcoChallengeResponse)(nil),    // 47: eco_exchange.ParticipateEcoChallengeResponse
	(*UpdateEcoChallengeProgressRequest)(nil),  // 48: eco_exchange.UpdateEcoChallengeProgressRequest
	(*UpdateEcoChallengeProgressResponse)(nil), // 49: eco_exchange.UpdateEcoChallengeProgressResponse
	(*EcoTip)(nil),                             // 50: eco_exchange.EcoTip
	(*AddEcoTipRequest)(nil),                   // 51: eco_exchange.AddEcoTipRequest
	(*AddEcoTipResponse)(nil),                  // 52: eco_exchange.AddEcoTipResponse
	(*GetEcoTipsRequest)(nil),                  // 53: eco_exchange.GetEcoTipsRequest
	(*GetEcoTipsResponse)(nil),                 // 54: eco_exchange.GetEcoTipsResponse
}
var file_item_item_service_proto_depIdxs = []int32{
	0,  // 0: eco_exchange.AddItemResponse.item:type_name -> eco_exchange.Item
	0,  // 1: eco_exchange.UpdateItemResponse.item:type_name -> eco_exchange.Item
	0,  // 2: eco_exchange.GetItemsResponse.items:type_name -> eco_exchange.Item
	0,  // 3: eco_exchange.GetItemResponse.item:type_name -> eco_exchange.Item
	0,  // 4: eco_exchange.SearchItemsResponse.items:type_name -> eco_exchange.Item
	13, // 5: eco_exchange.CreateSwapResponse.swap:type_name -> eco_exchange.Swap
	13, // 6: eco_exchange.UpdateSwapStatusResponse.swap:type_name -> eco_exchange.Swap
	13, // 7: eco_exchange.GetSwapsResponse.swaps:type_name -> eco_exchange.Swap
	20, // 8: eco_exchange.AddRecyclingCenterResponse.center:type_name -> eco_exchange.RecyclingCenter
	20, // 9: eco_exchange.GetRecyclingCentersResponse.centers:type_name -> eco_exchange.RecyclingCenter
	26, // 10: eco_exchange.RecyclingSubmission.items:type_name -> eco_exchange.SubmissionItem
	26, // 11: eco_exchange.AddRecyclingSubmissionRequest.items:type_name -> eco_exchange.SubmissionItem
	25, // 12: eco_exchange.AddRecyclingSubmissionResponse.submission:type_name -> eco_exchange.RecyclingSubmission
	29, // 13: eco_exchange.AddUserRatingResponse.rating:type_name -> eco_exchange.Rating
	29, // 14: eco_exchange.GetUserRatingsResponse.ratings:type_name -> eco_exchange.Rating
	34, // 15: eco_exchange.AddItemCategoryResponse.category:type_name -> eco_exchange.ItemCategory
	39, // 16: eco_exchange.GetStatisticsResponse.top_categories:type_name -> eco_exchange.TopCategory
	40, // 17: eco_exchange.GetStatisticsResponse.top_recycling_centers:type_name -> eco_exchange.TopRecyclingCenter
	43, // 18: eco_exchange.AddEcoChallengeResponse.challenge:type_name -> eco_exchange.EcoChallenge
	50, // 19: eco_exchange.AddEcoTipResponse.tip:type_name -> eco_exchange.EcoTip
	50, // 20: eco_exchange.GetEcoTipsResponse.tips:type_name -> eco_exchange.EcoTip
	1,  // 21: eco_exchange.EcoExchangeService.AddItem:input_type -> eco_exchange.AddItemRequest
	3,  // 22: eco_exchange.EcoExchangeService.UpdateItem:input_type -> eco_exchange.UpdateItemRequest
	5,  // 23: eco_exchange.EcoExchangeService.DeleteItem:input_type -> eco_exchange.DeleteItemRequest
	7,  // 24: eco_exchange.EcoExchangeService.GetItems:input_type -> eco_exchange.GetItemsRequest
	9,  // 25: eco_exchange.EcoExchangeService.GetItem:input_type -> eco_exchange.GetItemRequest
	11, // 26: eco_exchange.EcoExchangeService.SearchItems:input_type -> eco_exchange.SearchItemsRequest
	14, // 27: eco_exchange.EcoExchangeService.CreateSwap:input_type -> eco_exchange.CreateSwapRequest
	16, // 28: eco_exchange.EcoExchangeService.UpdateSwapStatus:input_type -> eco_exchange.UpdateSwapStatusRequest
	18, // 29: eco_exchange.EcoExchangeService.GetSwaps:input_type -> eco_exchange.GetSwapsRequest
	21, // 30: eco_exchange.EcoExchangeService.AddRecyclingCenter:input_type -> eco_exchange.AddRecyclingCenterRequest
	23, // 31: eco_exchange.EcoExchangeService.GetRecyclingCenters:input_type -> eco_exchange.GetRecyclingCentersRequest
	27, // 32: eco_exchange.EcoExchangeService.AddRecyclingSubmission:input_type -> eco_exchange.AddRecyclingSubmissionRequest
	30, // 33: eco_exchange.EcoExchangeService.AddUserRating:input_type -> eco_exchange.AddUserRatingRequest
	32, // 34: eco_exchange.EcoExchangeService.GetUserRatings:input_type -> eco_exchange.GetUserRatingsRequest
	35, // 35: eco_exchange.EcoExchangeService.AddItemCategory:input_type -> eco_exchange.AddItemCategoryRequest
	37, // 36: eco_exchange.EcoExchangeService.GetStatistics:input_type -> eco_exchange.GetStatisticsRequest
	41, // 37: eco_exchange.EcoExchangeService.GetUserActivity:input_type -> eco_exchange.GetUserActivityRequest
	44, // 38: eco_exchange.EcoExchangeService.AddEcoChallenge:input_type -> eco_exchange.AddEcoChallengeRequest
	46, // 39: eco_exchange.EcoExchangeService.ParticipateEcoChallenge:input_type -> eco_exchange.ParticipateEcoChallengeRequest
	48, // 40: eco_exchange.EcoExchangeService.UpdateEcoChallengeProgress:input_type -> eco_exchange.UpdateEcoChallengeProgressRequest
	51, // 41: eco_exchange.EcoExchangeService.AddEcoTip:input_type -> eco_exchange.AddEcoTipRequest
	53, // 42: eco_exchange.EcoExchangeService.GetEcoTips:input_type -> eco_exchange.GetEcoTipsRequest
	2,  // 43: eco_exchange.EcoExchangeService.AddItem:output_type -> eco_exchange.AddItemResponse
	4,  // 44: eco_exchange.EcoExchangeService.UpdateItem:output_type -> eco_exchange.UpdateItemResponse
	6,  // 45: eco_exchange.EcoExchangeService.DeleteItem:output_type -> eco_exchange.DeleteItemResponse
	8,  // 46: eco_exchange.EcoExchangeService.GetItems:output_type -> eco_exchange.GetItemsResponse
	10, // 47: eco_exchange.EcoExchangeService.GetItem:output_type -> eco_exchange.GetItemResponse
	12, // 48: eco_exchange.EcoExchangeService.SearchItems:output_type -> eco_exchange.SearchItemsResponse
	15, // 49: eco_exchange.EcoExchangeService.CreateSwap:output_type -> eco_exchange.CreateSwapResponse
	17, // 50: eco_exchange.EcoExchangeService.UpdateSwapStatus:output_type -> eco_exchange.UpdateSwapStatusResponse
	19, // 51: eco_exchange.EcoExchangeService.GetSwaps:output_type -> eco_exchange.GetSwapsResponse
	22, // 52: eco_exchange.EcoExchangeService.AddRecyclingCenter:output_type -> eco_exchange.AddRecyclingCenterResponse
	24, // 53: eco_exchange.EcoExchangeService.GetRecyclingCenters:output_type -> eco_exchange.GetRecyclingCentersResponse
	28, // 54: eco_exchange.EcoExchangeService.AddRecyclingSubmission:output_type -> eco_exchange.AddRecyclingSubmissionResponse
	31, // 55: eco_exchange.EcoExchangeService.AddUserRating:output_type -> eco_exchange.AddUserRatingResponse
	33, // 56: eco_exchange.EcoExchangeService.GetUserRatings:output_type -> eco_exchange.GetUserRatingsResponse
	36, // 57: eco_exchange.EcoExchangeService.AddItemCategory:output_type -> eco_exchange.AddItemCategoryResponse
	38, // 58: eco_exchange.EcoExchangeService.GetStatistics:output_type -> eco_exchange.GetStatisticsResponse
	42, // 59: eco_exchange.EcoExchangeService.GetUserActivity:output_type -> eco_exchange.GetUserActivityResponse
	45, // 60: eco_exchange.EcoExchangeService.AddEcoChallenge:output_type -> eco_exchange.AddEcoChallengeResponse
	47, // 61: eco_exchange.EcoExchangeService.ParticipateEcoChallenge:output_type -> eco_exchange.ParticipateEcoChallengeResponse
	49, // 62: eco_exchange.EcoExchangeService.UpdateEcoChallengeProgress:output_type -> eco_exchange.UpdateEcoChallengeProgressResponse
	52, // 63: eco_exchange.EcoExchangeService.AddEcoTip:output_type -> eco_exchange.AddEcoTipResponse
	54, // 64: eco_exchange.EcoExchangeService.GetEcoTips:output_type -> eco_exchange.GetEcoTipsResponse
	43, // [43:65] is the sub-list for method output_type
	21, // [21:43] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_item_item_service_proto_init() }
func file_item_item_service_proto_init() {
	if File_item_item_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_item_item_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SearchItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SearchItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Swap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSwapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSwapStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSwapStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetSwapsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetSwapsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*RecyclingCenter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*AddRecyclingCenterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*AddRecyclingCenterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GetRecyclingCentersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GetRecyclingCentersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*RecyclingSubmission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*SubmissionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*AddRecyclingSubmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*AddRecyclingSubmissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*Rating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*AddUserRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*AddUserRatingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserRatingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserRatingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*ItemCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*AddItemCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*AddItemCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*GetStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*GetStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*TopCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*TopRecyclingCenter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserActivityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*EcoChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*AddEcoChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*AddEcoChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*ParticipateEcoChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*ParticipateEcoChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateEcoChallengeProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateEcoChallengeProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*EcoTip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*AddEcoTipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*AddEcoTipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*GetEcoTipsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_item_service_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*GetEcoTipsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_item_item_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_item_item_service_proto_goTypes,
		DependencyIndexes: file_item_item_service_proto_depIdxs,
		MessageInfos:      file_item_item_service_proto_msgTypes,
	}.Build()
	File_item_item_service_proto = out.File
	file_item_item_service_proto_rawDesc = nil
	file_item_item_service_proto_goTypes = nil
	file_item_item_service_proto_depIdxs = nil
}
